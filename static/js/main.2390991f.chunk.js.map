{"version":3,"sources":["assets/infnote-logo.png","utils/settings.js","utils/storage.js","utils/index.js","models/Post.js","utils/languages.js","models/APIClient.js","models/Key.js","components/Note/CodeRender.js","components/Note/ImgRender.js","components/Note/NoteCard.js","models/reducers/Refresh.js","models/reducers/index.js","models/Note.js","models/index.js","components/Note/NoteFlow.js","components/Note/Note.js","components/Utils/FixedSpace.js","components/Utils/Line.js","models/actions/index.js","components/Note/PostForm.js","components/NavBar/NavBar.js","components/App/App.js","serviceWorker.js","index.js","models/User.js"],"names":["module","exports","__webpack_require__","p","SETTINGS","apiAddress","chainAddress","languagesList","defaultLanguage","Storage","index","localStorage","getItem","value","setItem","removeItem","getValue","setValue","language","navigator","userLanguage","Languages","d","__webpack_exports__","settings","storage","languages","Post","props","_this","this","Object","_home_travis_build_Infnote_infnote_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","getMembers","forEach","name","members","reduce","result","writable","defineProperties","seal","title","content","data","date_submitted","Math","floor","Date","now","reply_to","nsfw","jsonString","JSON","stringify","keys","sort","buffer","Buffer","key","User","currentUser","sign","toAddress","APIClient","shared","client","post","_home_travis_build_Infnote_infnote_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","words","en-US","apiserver","cancel","close","connectionError","email","error","login","logout","logout?","register","save","nickname","myPrivateKey","ok","privateKeyWIF","dialog.privatekey.copy","loading","no_more_data","anonymous","anonymous.status","expand","user.notfound","private_key.important_hint","post.limit_exceed","post.empty","zh-CN","__","read","instance","axios","create","baseURL","getAPIAddress","url","Key","gen","arguments","length","undefined","keyPair","bitcoin","ECPair","makeRandom","toWIF","payments","p2pkh","pubkey","publicKey","address","wif","fromWIF","bs58","decode","signature","recovery","compressed","concat","alloc","Error","flagByte","readUInt8","slice","encode","toString","message","secp256k1","createHash","update","digest","privateKey","encodeSignature","hash","isBuffer","sig","decodeSignature","recover","getAddress","CodeRender","_this$props","react_default","a","createElement","default_highlight","React","PureComponent","defaultProps","ImgRender","src","alt","style","maxWidth","Note","object","onClick","time","dateSubmitted","user","index_es","truncated","avatar","subheader","toLocaleString","paddingTop","component","wordBreak","react_markdown_default","source","renderers","code","image","container","justify","color","Component","refresh","state","type","combineReducers","classCallCheck","map","getMap","id","replyTo","lastReply","replies","blockTime","blockHeight","page","size","get","params","then","response","results","obj","payloadID","Store","createStore","reducers","NoteFlow","notes","alert","alertContent","expandNote","bottomEl","clear","setState","NoteModel","fetch","toConsumableArray","catch","status","bottomEvent","el","document","getElementById","getBoundingClientRect","bottom","window","innerHeight","handleAlertClose","handleExpand","note","fetchNote","handleExpandClose","_this2","addEventListener","subscribe","getState","removeEventListener","_this3","_this$state","flow","item","NoteCard","xs","sm","md","direction","spacing","Note_PostForm","textAlign","display","open","onClose","aria-labelledby","fullWidth","action","Close_default","FixedSpace","classes","className","classNames","withStyles","xs4","height","xs3","xs2","lg","xl","xl2","xl3","xl4","Line","width","line","borderBottomColor","borderBottomWidth","borderBottomStyle","remainLimit","PostForm","contentRemain","handleChange","event","_this$setState","defineProperty","target","trim","PostModel","submit","dispatch","err","label","multiline","rows","onChange","margin","variant","Utils_FixedSpace","remainText","remainHighlight","NavBar","drawer","loginDialog","signUpDialog","logoutDialog","keyDialog","logged","anchorEl","signUpErrors","handleOpenLogin","handleMenuClose","handleCloseLogin","handleLogin","UserModel","updateCurrentUser","changeURL","handleClickOpenSignUp","handleCloseSignUp","handleSubmitSignUp","signUp","handleClickOpenLogout","handleCloseLogout","handleLogout","handleOpenKeyDialog","handleCloseKeyDialog","copied","toggleDrawer","drawerSave","handleMenuOpen","currentTarget","position","logo","srcSet","alignItems","aria-owns","aria-haspopup","userButton","hint","settingsButton","Settings_default","Boolean","lib_default","renderAs","readOnly","anchor","button","theme","_drawer","marginLeft","breakpoints","up","textTransform","dialogText","overflowWrap","fontSize","fontWeight","palette","grey","padding","createMuiTheme","typography","useNextVariants","fontFamily","App","core_styles","components_NavBar_NavBar","Note_NoteFlow","location","hostname","match","migrate","ReactDOM","render","components_App_App","serviceWorker","ready","registration","unregister","__currentUser","userID","getNickName","setCurrentUser","user_id"],"mappings":"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","file":"static/js/main.2390991f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/infnote-logo.8223000b.png\";","const SETTINGS = {\n    apiAddress: 'https://hk.infnote.com',\n    chainAddress: 'https://hk.infnote.com',\n    languagesList: ['English','Simplified Chinese'],\n    defaultLanguage: 'en-US'\n}\n\nexport default SETTINGS","import SETTINGS from './settings'\nimport { Languages } from './languages'\n\nclass Storage {\n    static getValue(index) {\n        let result = localStorage.getItem(index)\n        return result\n    }\n\n    static setValue(index, value) {\n        localStorage.setItem(index, value)\n    }\n\n    static removeItem(index){\n        localStorage.removeItem(index)\n    }\n    \n    static migrate(){\n        if (Storage.getValue('apiAddress') == null)\n            Storage.setValue('apiAddress', SETTINGS.apiAddress)\n        if (Storage.getValue('chainAddress') == null)\n            Storage.setValue('chainAddress', SETTINGS.chainAddress)\n        if (Storage.getValue('language') == null) {\n            let language = navigator.language || navigator.userLanguage\n            if ((language !== 'en-US') && (language !== 'zh-CN'))\n                language = SETTINGS.defaultLanguage\n            Storage.setValue('language', language)\n        }\n        Languages.index = Storage.getValue('language')\n    }\n}\n\nexport default Storage","export {default as SETTINGS} from './settings'\nexport {default as Storage} from './storage'\nexport {default as __} from './languages'\n","import APIClient from './APIClient'\nimport User from './User'\n/* global Buffer */\n\nclass Post {\n    // static getMap() {\n    //     return {id: 'id', replyTo: 'reply_to', lastReply: 'last_reply', user: 'user', replies: 'replies', title: 'title', content: 'content', dateSubmitted: 'date_submitted', nsfw: 'nsfw', signature: 'signature', blockTime: 'block_time', blockHeight: 'block_height'}\n    // }\n\n    static getMembers() {\n        return ['title', 'content', 'data_submitted', 'reply_to', 'user_id', 'nsfw', 'signature']\n    }\n\n    static submit(title, content) {\n        let data = { \n            title: title, \n            content: content,\n            date_submitted: Math.floor(Date.now()/1000),\n            reply_to: null,\n            nsfw: false\n        }\n        \n        let jsonString = JSON.stringify(data, Object.keys(data).sort())\n        let buffer = new Buffer(jsonString)\n        let key = User.currentUser()['key']\n        data['signature'] = key.sign(buffer)\n        data['user_id'] = key.toAddress()\n        return APIClient.shared().client.post('/post/', data)\n    }\n\n    constructor(props) {\n        if (props) {\n            Post.getMembers().forEach(name => this[name] = props[name])\n        }\n        let members = Post.getMembers().reduce(\n            (result, name) => {\n                result[name] = { writable: false }\n                return result\n            }, {}\n        )\n        Object.defineProperties(this, members)\n        Object.seal(this)\n    }\n}\n\nexport default Post","export class Languages {\n    static words = {\n        'en-US': {\n            'apiserver': 'API Server',\n            'cancel': 'Cancel',\n            'close': 'Close',\n            'connectionError': 'Connection Error',\n            'email': 'Email',\n            'error': 'Error',\n            'login':'Login',\n            'logout':'Logout',\n            'logout?': 'Are you sure to logout?',\n            'register':'Register',\n            'save': 'Save',\n            'nickname': 'Nickname',\n            'myPrivateKey': 'My Private Key',\n            'ok': 'OK',\n            'privateKeyWIF': 'Private Key (Wallet Import Format)',\n            'post': 'Post',\n            'dialog.privatekey.copy': 'Copy to Clipboard',\n            'loading': 'Loading...',\n            'no_more_data': 'No More Note',\n            'anonymous': 'Anonymous',\n            'anonymous.status': 'As Anonymous',\n            'expand': 'Expand to Read All',\n            'user.notfound': 'Cannot find user, please sign up first',\n            'private_key.important_hint': '⚠️IMPORTANT: Private key is only saved locally in your browser. We won\\'t retrive your key in any form. Please save your key somewhere carefully, it cannot be restored if lost.',\n            'post.limit_exceed': 'Content size exceed 1000 bytes limit.',\n            'post.empty': 'Cannot post an empty note.'\n        },\n        'zh-CN': {\n            'apiserver': 'API 服务器',\n            'cancel': '取消',\n            'close': '关闭',\n            'connectionError': '连接错误',\n            'email': '邮箱',\n            'error': '错误',\n            'login':'登录',\n            'logout':'登出',\n            'logout?': '确定要登出吗？',\n            'register':'注册',\n            'save': '保存',\n            'nickname': '昵称',\n            'myPrivateKey': '我的密钥',\n            'ok': '确定',\n            'privateKeyWIF': '秘钥 (WIF格式)',\n            'post': '发帖',\n            'dialog.privatekey.copy': '复制到剪贴板',\n            'loading': '加载中...',\n            'no_more_data': '没有更多 Note 了',\n            'anonymous': '匿名',\n            'anonymous.status': '匿名状态',\n            'expand': '阅读全文',\n            'user.notfound': '用户未注册',\n            'private_key.important_hint': '⚠️重要：私钥将只会保存于本地浏览器中。本站不会以任何形式获取您的私钥，若不慎丢失将无法恢复，请妥善保管。',\n            'post.limit_exceed': '超出 10000 字节内容限制',\n            'post.empty': '无法发送空内容'\n        }\n    }\n\n    static index = ''\n\n    static read(key){\n        return Languages.words[Languages.index][key]\n    }\n}\n\nfunction __(key){\n    return Languages.read(key)\n}\n\nexport default __\n\n","import axios from 'axios'\nimport {SETTINGS} from 'utils'\n// import {Store} from 'models'\n\nvar instance = null\n\nclass APIClient {\n    static shared(){\n        if (instance === null)\n            instance = new APIClient()\n        return instance\n    }\n\n    static changeURL(url)\n    {\n        APIClient.shared().client = axios.create({\n            baseURL: url,\n        })\n    }\n\n    static getAPIAddress(){\n        let result = localStorage.getItem('apiAddress')\n        if (result === null)\n            return SETTINGS.apiAddress\n        else\n            return result\n    }\n\n    constructor() {\n        this.client = axios.create({\n            baseURL: APIClient.getAPIAddress(),\n        })\n    }\n}\n\nexport default APIClient","import bitcoin from 'bitcoinjs-lib'\nimport bs58 from 'bs58'\nimport secp256k1 from 'secp256k1'\nimport createHash from 'create-hash'\n\nclass Key {\n    keyPair = null\n\n    static fromWIF(wif) {\n        var key = new Key(false)\n        key.keyPair = bitcoin.ECPair.fromWIF(wif)\n        return key\n    }\n\n    static getAddress(publicKey) {\n        const { address } = bitcoin.payments.p2pkh({ pubkey: bs58.decode(publicKey) })\n        return address\n    }\n\n    static encodeSignature(signature, recovery, compressed) {\n        if (compressed) recovery += 4\n        return Buffer.concat([Buffer.alloc(1, recovery + 27), signature])\n    }\n\n    static decodeSignature(buffer) {\n        if (buffer.length !== 65) throw new Error('Invalid signature length')\n\n        var flagByte = buffer.readUInt8(0) - 27\n        if (flagByte > 7) throw new Error('Invalid signature parameter')\n\n        return {\n            compressed: !!(flagByte & 4),\n            recovery: flagByte & 3,\n            signature: buffer.slice(1)\n        }\n    }\n\n    toWIF() {\n        return this.keyPair.toWIF()\n    }\n\n    toAddress() {\n        const { address } = bitcoin.payments.p2pkh({ pubkey: this.keyPair.publicKey })\n        return address\n    }\n\n    constructor(gen = true) {\n        if (gen) {\n            this.keyPair = bitcoin.ECPair.makeRandom()\n        }\n    }\n\n    publicKey() {\n        return bs58.encode(this.keyPair.publicKey).toString()\n    }\n\n    sign(message) {\n        var signature = secp256k1.sign(createHash('sha256').update(message).digest(), this.keyPair.privateKey)\n        return bs58.encode(Key.encodeSignature(signature.signature, signature.recovery, true)).toString()\n    }\n\n    static recoverAddress(signature,message)\n    {\n        let hash = createHash('sha256').update(message).digest()\n        if (!Buffer.isBuffer(signature)) signature = bs58.decode(signature)\n        let sig = Key.decodeSignature(signature)\n        let publicKey = bs58.encode(secp256k1.recover(hash, sig.signature, sig.recovery, true)).toString()\n        let address= Key.getAddress(publicKey)\n        return address\n    }\n}\n\nexport default Key\n","import React from 'react'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\n\nclass CodeRender extends React.PureComponent {\n    static defaultProps = {\n        language: null,\n    }\n    \n    render() {\n        const { language, value } = this.props\n\n        return (\n            <SyntaxHighlighter language={language}>\n                {value}\n            </SyntaxHighlighter>\n        )\n    }\n}\n\nexport default CodeRender\n","import React from 'react'\n\nclass ImgRender extends React.PureComponent {\n    static defaultProps = {\n        language: null,\n    }\n    \n    render() {\n        const { src, alt } = this.props\n        return (\n            <img style={{maxWidth: '100%'}} src={src} alt={alt} />\n        )\n    }\n}\n\nexport default ImgRender\n","import React, { Component } from 'react'\nimport Markdown from 'react-markdown'\nimport { Card, CardHeader, CardContent, Typography, Avatar, Grid } from '@material-ui/core'\nimport CodeRender from './CodeRender'\nimport __ from '../../utils/languages'\nimport ImgRender from './ImgRender'\n\nclass Note extends Component {\n    render() {\n        const { object, onClick } = this.props\n        const time = new Date(object.dateSubmitted * 1000)\n        const nickname = object.user.nickname\n        return (\n            <Card onClick={object.truncated ? onClick : null}>\n                <CardHeader avatar={\n                    <Avatar>∞</Avatar>\n                }\n                title={nickname === 'anonymous' ? __(nickname) : nickname}\n                subheader={time.toLocaleString()} />\n                <CardContent style={{paddingTop: 0}}>\n                    <Typography component=\"div\" style={{wordBreak: 'break-word'}}>\n                        <Markdown \n                            source={object.content + (object.truncated ? '...' : '')} \n                            renderers={{\n                                code: CodeRender,\n                                image: ImgRender,\n                            }}\n                        />\n                    </Typography>\n                    <Grid container justify='flex-end'>\n                        <Typography style={{color: 'gray'}}>\n                            {object.truncated ? __('expand') : ''}\n                        </Typography>\n                    </Grid>\n                </CardContent>\n            </Card>\n        )\n    }\n}\n\nexport default Note\n","const refresh = (state = null, action) => {\n    switch (action.type) {\n    case 'refresh':\n        return true\n    default:\n        return state\n    }\n}\n\nexport default refresh","import { combineReducers } from 'redux'\nimport refresh from './Refresh'\n\nexport default combineReducers({refresh})","// import axios from 'axios'\nimport APIClient from './APIClient'\n\nclass Note {\n    static getMap() {\n        return {id: 'id', replyTo: 'reply_to', lastReply: 'last_reply', user: 'user', replies: 'replies', title: 'title', content: 'content', dateSubmitted: 'date_submitted', nsfw: 'nsfw', signature: 'signature', blockTime: 'block_time', blockHeight: 'block_height', truncated: 'truncated'}\n    }\n\n    static getMembers() {\n        return ['id', 'replyTo', 'lastReply', 'user', 'replies', 'title', 'content', 'dateSubmitted', 'nsfw', 'signature', 'blockTime', 'blockHeight', 'truncated']\n    }\n\n    static fetch(page=1, size=10) {\n        return APIClient.shared().client.get('/post/list/', {\n            params: {\n                page: page,\n                size: size\n            }\n        }).then(response => {\n            return response.data.results.map(obj => new Note(obj))\n        })\n    }\n\n    static fetchNote(payloadID) {\n        return APIClient.shared().client.get('/post/' + payloadID + '/')\n            .then(response => {\n                return new Note(response.data)\n            })\n    }\n\n    constructor(props) {\n        if (props) {\n            let map = Note.getMap()\n            Note.getMembers().forEach(name => this[name] = props[map[name]] )\n        }\n        let members = Note.getMembers().reduce(\n            (result, name) => {\n                result[name] = { writable: false }\n                return result\n            }, {}\n        )\n        Object.defineProperties(this, members)\n        Object.seal(this)\n    }\n}\n\nexport default Note","import { createStore } from 'redux'\nimport reducers from './reducers'\nexport { default as NoteModel } from './Note'\nexport { default as PostModel } from './Post'\nexport { default as UserModel } from './User'\nexport { default as Key} from './Key'\nexport { default as APIClient} from './APIClient' \n\nexport const Store = createStore(reducers)","import React, { Component } from 'react'\nimport { CardHeader, Avatar, Grid, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Typography, IconButton } from '@material-ui/core'\nimport Markdown from 'react-markdown'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { NoteCard, PostForm } from '.'\nimport { NoteModel, Store } from 'models'\nimport __ from '../../utils/languages'\nimport CodeRender from './CodeRender'\n\nclass NoteFlow extends Component {\n    state = {\n        notes: [],\n        page: 1,\n        alert: false,\n        alertContent: '',\n        loading: 0,\n        expand: false,\n        expandNote: {\n            user: {},\n            dateSubmitted: 0\n        },\n    }\n    bottomEl = null\n\n    update = (page, clear) => {\n        if (this.state.loading === 3 && !clear) {\n            return\n        }\n\n        this.setState({loading: 1, page})\n        NoteModel.fetch(page)\n            .then(notes => {\n                this.setState({\n                    notes: clear ? notes : [...this.state.notes, ...notes],\n                    loading: 2\n                })\n            })\n            .catch(error => {\n                if (!error.response) {\n                    this.setState({alert: true, alertContent: '连接失败，服务器已停止运行或 API 服务器地址错误'})\n                } else if (error.response.status !== 404) {\n                    this.setState({alert: true, alertContent: error.message})\n                } else {\n                    this.setState({loading: 3})\n                }\n            })\n    }\n\n    bottomEvent = () => {\n        const el = document.getElementById(this.state.notes.length - 1)\n        if (!el) {\n            return \n        }\n        if (el.getBoundingClientRect().bottom <= window.innerHeight && this.bottomEl !== el) {\n            this.bottomEl = el\n            this.update(this.state.page + 1)\n        }\n    }\n\n    handleAlertClose = () => {\n        this.setState({alert: false})\n    }\n\n    handleExpand = note => () => {\n        this.setState({expand: true, expandNote: note})\n        NoteModel.fetchNote(note.id).then(note => {\n            this.setState({expandNote: note})\n        })\n    }\n\n    handleExpandClose = () => {\n        this.setState({expand: false})\n    }\n\n    componentDidMount() {\n        this.update(1, true)\n        document.addEventListener('scroll', this.bottomEvent)\n        Store.subscribe(() => {\n            const save = Store.getState().refresh\n            if (save) {\n                this.setState({ notes: []})\n                this.update(1, true)\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.setState({ notes: [], page: 0 })\n        document.removeEventListener('scroll', this.bottomEvent)\n    }\n\n    render() {\n        const { notes, alert, alertContent, loading, expand, expandNote } = this.state\n        const flow = notes.map((note, index) => (\n            <Grid item key={index} id={index}>\n                <NoteCard object={note} onClick={this.handleExpand(note)} />\n            </Grid>\n        ))\n        const time = new Date(expandNote.dateSubmitted * 1000)\n        return (\n            <div>\n                <Grid container justify=\"center\">\n                    <Grid item xs={11} sm={8} md={5}>\n                        <Grid container direction=\"column\" spacing={16}>\n                            <Grid item>\n                                <PostForm />\n                            </Grid>\n                            {flow}\n                            <Grid item>\n                                <Typography style={ loading === 1 ? {textAlign: 'center'} : {display: 'none'}}>{__('loading')}</Typography>\n                                <Typography style={ loading === 3 ? {textAlign: 'center'} : {display: 'none'}}>{__('no_more_data')}</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                \n                <Dialog open={alert} onClose={this.handleAlertClose} aria-labelledby=\"form-dialog-title\" fullWidth>\n                    <DialogTitle id=\"form-dialog-title\">{__('loading.error')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {alertContent}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleAlertClose} color=\"primary\">\n                            {__('ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog open={expand} onClose={this.handleExpandClose} aria-labelledby=\"form-dialog-title\" fullWidth>\n                    <CardHeader \n                        avatar={\n                            <Avatar>∞</Avatar>\n                        }\n                        title={expandNote.user.nickname}\n                        subheader={time.toLocaleString()}\n                        action={\n                            <IconButton onClick={this.handleExpandClose} color=\"primary\">\n                                <CloseIcon />\n                            </IconButton>\n                        } \n                    />\n                    <DialogContent>\n                        <Typography component=\"div\" style={{wordBreak: 'break-word'}}>\n                            <Markdown source={expandNote.content} renderers={{code: CodeRender}} />\n                        </Typography>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default NoteFlow\n","import React, { Component } from 'react'\nimport { Typography } from '@material-ui/core'\n\n\nclass Note extends Component {\n    render() {\n        const { object } = this.props \n        return (\n            <div>\n                <Typography>{ object.title }</Typography>\n                <Typography>{ object.content }</Typography>\n                <Typography>{ object.dateSubmitted }</Typography>\n            </div>\n        )\n    }\n}\n\nexport default Note\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst fixedStyles = {\n    xs4: { height: 5 },\n    xs3: { height: 10 },\n    xs2: { height: 15 },\n    xs:  { height: 20 },\n    sm:  { height: 25 },\n    md:  { height: 40 },\n    lg:  { height: 60 },\n    xl:  { height: 80 },\n    xl2: { height: 100 },\n    xl3: { height: 150 },\n    xl4: { height: 220 },\n}\n\n\nclass FixedSpace extends Component {\n    render() {\n        const { classes, size, className } = this.props\n        return (\n            <div className={classNames(classes[size], className)}></div>\n        )\n    }\n}\n\nexport default withStyles(fixedStyles)(FixedSpace)\n\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = {\n    line: {\n        borderBottomStyle: 'solid',\n        borderBottomWidth: 1,\n        borderBottomColor: '#EEE',\n        width: '100%',\n    }\n}\n\n\nclass Line extends Component {\n    render() {\n        const { classes, width, color } = this.props\n        return (\n            <div className={classes.line} style={{\n                borderBottomColor: color,\n                borderBottomWidth: width,\n            }}></div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Line)\n","export const refresh = () => ({\n    type: 'refresh'\n})","import React, { Component } from 'react'\nimport { FixedSpace } from 'components/Utils'\nimport { TextField, Button, Card, CardContent, Typography, withStyles, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Grid } from '@material-ui/core'\nimport { PostModel, Store } from 'models'\nimport { refresh } from 'models/actions'\nimport { __ } from 'utils'\n\nconst remainLimit = {\n    content: 10000\n}\n\nconst styles = {\n    remainText: {\n        textAlign: 'left',\n        color: 'gray',\n    },\n    remainHighlight: {\n        textAlign: 'left',\n        color: 'red'\n    }\n}\n\nclass PostForm extends Component {\n\n    state = {\n        content: '',\n        contentRemain: remainLimit.content,\n        alert: false,\n        alertContent: ''\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n            [name+'Remain']: remainLimit[name] - event.target.value.length\n        })\n    }\n\n    handleAlertClose = () => {\n        this.setState({alert: false})\n    }\n\n    post = () => {\n        const content = this.state.content.trim()\n        if (content.length > remainLimit.content) {\n            this.setState({alert: true, alertContent: __('post.limit_exceed')})\n            return\n        }\n        if (content.length <= 0) {\n            this.setState({alert: true, alertContent: __('post.empty')})\n            return\n        }\n        \n        PostModel.submit(null, content).then(() => {\n            this.setState({ content: '', contentRemain: remainLimit.content })\n            Store.dispatch(refresh())\n        }).catch( err => {\n            this.setState({alert: true, alertContent: err.message})\n        })\n    }\n\n    render() {\n        const { classes } = this.props\n        const { content, contentRemain, alert, alertContent} = this.state\n        return (\n            <div>\n                <Card>\n                    <CardContent>\n                        <TextField\n                            id=\"outlined-multiline-flexible\"\n                            label=\"Note\"\n                            multiline\n                            rows=\"4\"\n                            fullWidth\n                            value={content}\n                            onChange={this.handleChange('content')}\n                            //className={classes.textField}\n                            margin=\"normal\"\n                            // helperText=\"hello\"\n                            variant=\"outlined\"\n                        />\n                        <FixedSpace size=\"xs4\" />\n                        <Grid container justify='space-between'>\n                            <Grid item>\n                                <Typography \n                                    className={contentRemain >= 0 ? classes.remainText : classes.remainHighlight}>\n                                    {contentRemain >= 0 ? contentRemain : 0}\n                                </Typography>\n                            </Grid>    \n                            <Grid item>\n                                <Button variant=\"contained\" onClick={this.post}>{__('post')}</Button>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n\n                <Dialog open={alert} onClose={this.handleAlertClose} aria-labelledby=\"form-dialog-title\" fullWidth>\n                    <DialogTitle id=\"form-dialog-title\">{__('error')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {alertContent}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleAlertClose} color=\"primary\">\n                            {__('ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n            \n        )\n    }\n}\n\nexport default withStyles(styles)(PostForm)","import React, { Component } from 'react'\nimport { AppBar, Toolbar, Typography, Grid, IconButton, withStyles, Drawer, TextField, Button } from '@material-ui/core'\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Menu, MenuItem } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport logo from 'assets/infnote-logo.png'\nimport { FixedSpace } from 'components/Utils'\nimport { Store, APIClient, UserModel } from 'models'\nimport { refresh } from 'models/actions'\nimport { Storage , __ } from 'utils'\nimport QRCode from 'qrcode.react'\n\nconst styles = theme => ({\n    settingsButton: {\n        marginLeft: 15\n    },\n    drawer: {\n        [theme.breakpoints.up('xs')]: {\n            width: '100vw'\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: 400\n        },\n        padding: 15,\n        boxSizing: 'border-box'\n    },\n    userButton: {\n        textTransform: 'none',\n    },\n    dialogText: {\n        overflowWrap: 'break-word',\n    },\n    error: {\n        color: 'red'\n    },\n    hint: {\n        fontSize: 12,\n        fontWeight: 'bold',\n        color: theme.palette.grey[500],\n        padding: 5\n    },\n})\n\nclass NavBar extends Component {\n    state = {\n        drawer: false,\n        loginDialog: false,\n        signUpDialog: false,\n        logoutDialog: false,\n        keyDialog: false,\n        logged: false,\n        apiAddress: Storage.getValue('apiAddress'),\n        chainAddress: Storage.getValue('chainAddress'),\n        wif: Storage.getValue('wif'),\n        nickname: '',\n        email: '',\n        anchorEl: null,\n        alert: false,\n        alertContent: '',\n        signUpErrors: {}\n    }\n\n    handleOpenLogin = () => {\n        this.handleMenuClose()\n        this.setState({ loginDialog: true })\n    }\n\n    handleCloseLogin = () => {\n        this.setState({ loginDialog: false })\n    }\n\n    handleLogin = () => {\n        this.handleCloseLogin()\n        if (this.state.wif != null && this.state.wif.length > 0) {\n            UserModel.updateCurrentUser(this.state.wif).then(() => {\n                this.setState({ nickname: UserModel.currentUser()['nickname'], logged: true })\n                Storage.setValue('wif', this.state.wif)\n                APIClient.changeURL(this.state.apiAddress)\n                Store.dispatch(refresh())\n            }).catch(err => {\n                if (err.response && err.response.status === 404) {\n                    this.setState({alert: true, alertContent: __('user.notfound')})\n                } else {\n                    this.setState({alert: true, alertContent: err.message})\n                }\n                this.logout()\n            })  \n        }\n    }\n\n    handleClickOpenSignUp = () => {\n        this.setState({ signUpDialog: true })\n    }\n\n    handleCloseSignUp = () => {\n        this.setState({ signUpDialog: false })\n    }\n\n    handleSubmitSignUp = () => {\n        UserModel.signUp(this.state.nickname, this.state.email).then(wif => {\n            this.setState({\n                logged: true, \n                nickname: UserModel.currentUser()['nickname'], \n                email: UserModel.currentUser()['email'], \n                wif: wif, \n                signUpDialog: false,\n                keyDialog: true,\n            })\n            Storage.setValue('wif', wif)\n            Store.dispatch(refresh())\n        }).catch(err => {\n            if (err.response && err.response.status === 400) {\n                this.setState({signUpErrors: err.response.data})\n            } else {\n                this.setState({alert: true, alertContent: __('connectionError')})\n            }\n        })\n    }\n\n    handleClickOpenLogout = () => {\n        this.handleMenuClose()\n        this.setState({ logoutDialog: true })\n    }\n\n    handleCloseLogout = () => {\n        this.setState({ logoutDialog: false })\n    }\n\n    handleLogout = () => {\n        this.setState({ logoutDialog: false })\n        this.logout()\n    }\n\n    logout() {\n        this.setState({ logged: false })\n        this.setState({ nickname: '' })\n        this.setState({ email: '' })\n        this.setState({ wif: '' })\n        Storage.removeItem('wif')\n        UserModel.logout()\n        Store.dispatch(refresh())\n    }\n\n    handleOpenKeyDialog = () => {\n        this.setState({ keyDialog: true, anchorEl: null})\n    }\n\n    handleCloseKeyDialog = () => {\n        this.setState({ keyDialog: false, copied: false })\n    }\n\n    handleAlertClose = () => {\n        this.setState({ alert: false })\n    }\n\n    toggleDrawer = open => () => {\n        this.setState({ drawer: open })\n    }\n\n    drawerSave = () => {\n        this.toggleDrawer(false)()\n        Storage.setValue('apiAddress', this.state.apiAddress)\n        Storage.setValue('chainAddress', this.state.chainAddress)\n        \n        APIClient.changeURL(this.state.apiAddress)\n        Store.dispatch(refresh()) \n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        })\n    }\n\n    handleMenuOpen = event => {\n        this.setState({anchorEl: event.currentTarget})\n    }\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: null})\n    }\n\n    componentWillMount() {\n        if (this.state.wif != null)\n            UserModel.updateCurrentUser(this.state.wif).then(() => {\n                this.setState({ logged: true })\n                this.setState({ nickname: UserModel.currentUser()['nickname'] })\n                this.setState({ email: UserModel.currentUser()['email'] })\n                Store.dispatch(refresh()) \n            })\n    }\n\n    render() {\n        const { classes } = this.props\n        const { anchorEl, apiAddress, wif, nickname, email, logged, loginDialog, signUpDialog, logoutDialog, keyDialog, alert, alertContent, signUpErrors } = this.state\n        return (\n            <div>\n                <AppBar position=\"fixed\" color=\"inherit\">\n                    <Toolbar>\n                        <img src={logo} alt=\"\" srcSet={logo + ' 2x'} width=\"80\" />\n                        {(() => {\n                            if (logged) {\n                                return (\n                                    <Grid container justify=\"flex-end\" alignItems=\"center\">\n                                        <Grid item>\n                                            <Button \n                                                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                                                aria-haspopup=\"true\" \n                                                onClick={this.handleMenuOpen} \n                                                className={classes.userButton}>\n                                                <Typography>\n                                                    <strong>{nickname}</strong>\n                                                </Typography>\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                )\n                            }\n                            return (\n                                <Grid container justify=\"flex-end\" alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography className={classes.hint}>\n                                            {__('anonymous.status')}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button className={classes.userButton} onClick={this.handleOpenLogin}>\n                                            <Typography>\n                                                <strong>{__('login')}</strong>\n                                            </Typography>\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button className={classes.userButton} onClick={this.handleClickOpenSignUp}>\n                                            <Typography>\n                                                <strong>{__('register')}</strong>\n                                            </Typography>\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            )\n                        })()}\n                        <IconButton className={classes.settingsButton} onClick={this.toggleDrawer(true)}><SettingsIcon /></IconButton>\n                    </Toolbar>\n                </AppBar>\n                \n                <Menu id=\"simple-menu\" anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleOpenKeyDialog}>{__('myPrivateKey')}</MenuItem>  \n                    <MenuItem onClick={this.handleClickOpenLogout}>{__('logout')}</MenuItem>  \n                </Menu>\n\n                <Dialog fullWidth open={loginDialog} onClose={this.handleCloseLogin} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">{__('login')}</DialogTitle>\n                    <DialogContent>\n                        <TextField \n                            margin=\"dense\"\n                            id=\"login-wif\"\n                            label={__('privateKeyWIF')}\n                            value={wif === null ? '' : wif}\n                            onChange={this.handleChange('wif')}\n                            variant=\"outlined\"\n                            multiline\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseLogin} color=\"primary\">\n                            {__('cancel')}\n                        </Button>\n                        <Button onClick={this.handleLogin} color=\"primary\">\n                            {__('login')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            \n                <Dialog open={signUpDialog} onClose={this.handleCloseSignUp} aria-labelledby=\"form-dialog-title\" fullWidth>\n                    <DialogTitle id=\"form-dialog-title\">{__('register')}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"nickname\"\n                            label={__('nickname')}\n                            fullWidth\n                            value={nickname}\n                            onChange={this.handleChange('nickname')}\n                            variant=\"outlined\"\n                        />\n                        {(() => {\n                            if (signUpErrors.nickname) {\n                                return (\n                                    <Typography className={classes.error}>\n                                        {signUpErrors.nickname}\n                                    </Typography>\n                                )\n                            }\n                        })()}\n                        <TextField\n                            margin=\"dense\"\n                            id=\"email\"\n                            label={__('email')}\n                            type=\"email\"\n                            fullWidth\n                            value={email}\n                            onChange={this.handleChange('email')}\n                            variant=\"outlined\"\n                        />\n                        {(() => {\n                            if (signUpErrors.email) {\n                                return (\n                                    <Typography className={classes.error}>\n                                        {signUpErrors.email}\n                                    </Typography>\n                                )\n                            }\n                        })()}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseSignUp} color=\"primary\">\n                            {__('cancel')}\n                        </Button>\n                        <Button onClick={this.handleSubmitSignUp} color=\"primary\">\n                            {__('register')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={logoutDialog} onClose={this.handleCloseLogout} aria-labelledby=\"form-dialog-title\" fullWidth>\n                    <DialogTitle id=\"form-dialog-title\">{__('logout')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {__('logout?')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseLogout} color=\"primary\">\n                            {__('cancel')}\n                        </Button>\n                        <Button onClick={this.handleLogout} color=\"primary\">\n                            {__('logout')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog open={keyDialog} onClose={this.handleCloseLogout} aria-labelledby=\"form-dialog-title\" >\n                    <DialogTitle id=\"form-dialog-title\">{__('myPrivateKey')}</DialogTitle>\n                    <DialogContent>\n                        <Grid container direction='column' spacing={16}>\n                            <Grid item>\n                                <Typography style={{color: 'red'}}>{__('private_key.important_hint')}</Typography>\n                            </Grid>\n                            <Grid item style={{textAlign: 'center'}}>\n                                <QRCode value={wif} renderAs=\"svg\" size={256} />\n                            </Grid>\n                            <Grid item>\n                                <TextField id='wif-for-copy' value={wif} readOnly fullWidth/>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseKeyDialog}>\n                            {__('close')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog open={alert} onClose={this.handleAlertClose} aria-labelledby=\"form-dialog-title\" fullWidth>\n                    <DialogTitle id=\"form-dialog-title\">{__('error')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {alertContent}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleAlertClose} color=\"primary\">\n                            {__('ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Drawer anchor=\"right\" open={this.state.drawer} onClose={this.toggleDrawer(false)}>\n                    <div className={classes.drawer}>\n                        <Grid container justify='flex-end'>\n                            <IconButton onClick={this.toggleDrawer(false)}><CloseIcon /></IconButton>\n                        </Grid>\n                        <TextField\n                            id=\"api-server\"\n                            label={__('apiserver')}\n                            value={apiAddress}\n                            margin=\"normal\"\n                            fullWidth\n                            onChange={this.handleChange('apiAddress')}\n                        />\n                        {/* <TextField\n                            id=\"chain-server\"\n                            label=\"Chain 服务器\"\n                            value={chainAddress}\n                            margin=\"normal\"\n                            fullWidth\n                            onChange={this.handleChange('chainAddress')}\n                        /> */}\n                        <FixedSpace size=\"xs2\" />\n                        <Button variant=\"contained\" className={classes.button} onClick={this.drawerSave} fullWidth>\n                            {__('save')}\n                        </Button>\n                    </div>\n                    <Typography style={{textAlign: 'center', color: 'gray', position: 'fixed', bottom: 15, width: '100%'}}>\n                        infnote v0.1.0\n                    </Typography>\n                </Drawer>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(NavBar)\n","import React, { Component } from 'react'\n// import { Route } from 'react-router-dom'\nimport { NoteFlow } from 'components/Note'\nimport { NavBar } from 'components/NavBar'\nimport FixedSpace from 'components/Utils/FixedSpace'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n        fontFamily: [\n            'Avenir Next', \n            '-apple-system', \n            'BlinkMacSystemFont', \n            'Segoe UI', 'Roboto', 'Oxygen',\n            'Ubuntu', 'Cantarell', 'Fira Sans', \n            'Droid Sans', 'Helvetica Neue',\n        ]\n    }\n})\n\nclass App extends Component {\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <NavBar />\n                <FixedSpace size=\"xl\" />\n                <NoteFlow />\n            </MuiThemeProvider>\n        )\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\n/* eslint-disable no-undef */\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { App } from 'components/App'\nimport * as serviceWorker from './serviceWorker'\nimport {Storage} from 'utils'\n\nStorage.migrate()\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import APIClient from './APIClient'\nimport Key from './Key'\nimport __ from '../utils/languages'\n/* global Buffer */\n\nvar __currentUser\n\nclass User {\n    static currentUser() {\n        if (__currentUser) {\n            return __currentUser\n        }\n        __currentUser = User.anonymous()\n        return __currentUser\n    }\n\n    static setCurrentUser(user) {\n        __currentUser = user\n    }\n\n    static updateCurrentUser(wif) {\n        let key = Key.fromWIF(wif)\n        let userID = key.toAddress()\n        return User.getNickName(userID).then(response => {\n            User.setCurrentUser({\n                key,\n                userID,\n                nickname: response.data['nickname'],\n                email: response.data['email']\n            })\n        })\n    }\n\n    static signUp(nickname, email) {\n        let key = new Key()\n        let userID = key.toAddress()\n        let data = { email: email, nickname: nickname }\n        let jsonString = JSON.stringify(data)\n        let buffer = new Buffer(jsonString)\n        let signature = key.sign(buffer)\n        return APIClient.shared().client.post('/user/create/', {\n            user_id: userID,\n            nickname: nickname,\n            email: email,\n            signature: signature\n        }).then(response => {\n            User.setCurrentUser({\n                key,\n                userID,\n                nickname: response.data['nickname'],\n                email: response.data['email']\n            })\n            return key.toWIF()\n        })\n    }\n\n    static logout() {\n        User.setCurrentUser(User.anonymous())\n    }\n\n    static getNickName(userID) {\n        return APIClient.shared().client.get('/user/id/' + userID + '/')\n    }\n\n    static anonymous() {\n        let key = Key.fromWIF('Ky5DFuCVeiZ62gMcMMhedyHAo7VQDomX7JgMRp8xJ1HdtwqJJoq9')\n        let userID = key.toAddress()\n        return {\n            key,\n            userID,\n            nickname: __('anonymous'),\n            email: 'anonymous@infnote.com'\n        }\n    }\n}\n\nexport default User"],"sourceRoot":""}